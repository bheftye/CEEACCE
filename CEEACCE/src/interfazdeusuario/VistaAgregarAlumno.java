/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazdeusuario;

import controladorinterfacesdeusuario.ControladorInterfacesDeUsuario;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import modelo.Alumno;
import modelo.ListaDePlanesDeEstudio;
import modelo.PlanDeEstudio;

/**
 *
 * @author brentheftye
 */
public class VistaAgregarAlumno extends javax.swing.JFrame {

    /**
     * Creates new form VistaAgregarAlumno
     */
    public VistaAgregarAlumno() {
        initComponents();
        CentradorDeVistas.getCentradorDeVistas().centrarJFrame(this);
        generaFechaInscripcion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreAlumno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apellidosAlumno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sexoAlumno = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        diaNacimiento = new javax.swing.JComboBox();
        mesNacimiento = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        anioNacimiento = new javax.swing.JComboBox(generaOpcionesAnios().toArray());
        jLabel9 = new javax.swing.JLabel();
        lugarDeNacimiento = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        curpAlumno = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        emailAlumno = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        matriculaAlumno = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        fechaDeInscripcion = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        turnoCombo = new javax.swing.JComboBox();
        botonAltaAlumno = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        planesDeEstudioCombo = new javax.swing.JComboBox();
        botonCancelar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Información de Alumno");

        jLabel2.setText("Nombre(s):");

        jLabel3.setText("Apellidos:");

        apellidosAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosAlumnoActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo:");

        sexoAlumno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona sexo", "Hombre", "Mujer" }));

        jLabel5.setText("Fecha de nacimiento:");

        jLabel6.setText("Día");

        jLabel7.setText("Mes:");

        diaNacimiento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona un día", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        mesNacimiento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona un mes", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jLabel8.setText("Año:");

        jLabel9.setText("Lugar de nacimiento:");

        jLabel10.setText("CURP:");

        jLabel11.setText("E-mail:");

        jLabel12.setText("Matrícula:");

        jLabel13.setText("Fecha de alta:");

        fechaDeInscripcion.setEditable(false);

        jLabel14.setText("Turno:");

        turnoCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona un turno", "Matutino", "Vespertino", "Diurno", "Nocturno" }));

        botonAltaAlumno.setText("Dar de alta");
        botonAltaAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAltaAlumnoActionPerformed(evt);
            }
        });

        jLabel15.setText("Plan de Estudio:");

        planesDeEstudioCombo = new javax.swing.JComboBox(llenaPlanesDeEstudio().toArray());

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(294, 294, 294)
                .add(jLabel1)
                .add(0, 0, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel4)
                            .add(jLabel5))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, nombreAlumno, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, sexoAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, apellidosAlumno))
                                .add(0, 0, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(diaNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(mesNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel8)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(anioNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(84, Short.MAX_VALUE))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel9)
                            .add(jLabel10)
                            .add(jLabel11)
                            .add(jLabel12)
                            .add(jLabel13)
                            .add(jLabel14)
                            .add(jLabel15))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(lugarDeNacimiento)
                            .add(curpAlumno)
                            .add(emailAlumno)
                            .add(matriculaAlumno)
                            .add(fechaDeInscripcion)
                            .add(turnoCombo, 0, 207, Short.MAX_VALUE)
                            .add(planesDeEstudioCombo, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(botonAltaAlumno)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(botonCancelar)
                .add(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1)
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(nombreAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(apellidosAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(sexoAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jLabel6)
                    .add(jLabel7)
                    .add(diaNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(mesNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)
                    .add(anioNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(lugarDeNacimiento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(curpAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(emailAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(matriculaAlumno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(fechaDeInscripcion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(turnoCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(planesDeEstudioCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botonAltaAlumno)
                    .add(botonCancelar))
                .add(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void apellidosAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosAlumnoActionPerformed

    private void botonAltaAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAltaAlumnoActionPerformed
        // TODO add your handling code here:
        boolean camposLlenos = validarLlenadoDeCampos();
        if(camposLlenos){
            String matricula = this.matriculaAlumno.getText().trim();
            String nombre = this.nombreAlumno.getText().trim();
            String apellidos = this.apellidosAlumno.getText().trim();
            String dia = this.diaNacimiento.getSelectedItem().toString();
            String mes = Integer.toString(this.mesNacimiento.getSelectedIndex());
            String anio = this.anioNacimiento.getSelectedItem().toString();
            String fechaInscripcion = this.fechaDeInscripcionAlumno;
            String sexo = this.sexoAlumno.getSelectedItem().toString();
            String email = this.emailAlumno.getText();
            String curp = this.curpAlumno.getText();
            String lugar = this.lugarDeNacimiento.getText();
            String turno = this.turnoCombo.getSelectedItem().toString();
            PlanDeEstudio planDeEstudio =  ControladorInterfacesDeUsuario.getControladorInterfacesDeUsuario().obtenerPlanDeEstudioPorClave(ListaDePlanesDeEstudio.getListaDePlanesDeEstudio().getPlanesDeEstudio().get(planesDeEstudioCombo.getSelectedIndex()-1).getClave());
            Alumno alumno = new Alumno(nombre, apellidos, sexo, email, matricula, curp, lugar, anio+"-"+mes+"-"+dia, fechaInscripcion, turno, planDeEstudio);
            boolean agregoAlumno = ControladorInterfacesDeUsuario.getControladorInterfacesDeUsuario().agregarAlumno(alumno);
            if (agregoAlumno) {
                JOptionPane.showMessageDialog(this, "Alumno agregado exitosamente");
                new VistaAdministradorAlumnos().setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "No fue posible crear este alumno.");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Verifica que todos los campos estén llenos.");
        }
    }//GEN-LAST:event_botonAltaAlumnoActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    
    /**
     * Método que genera las opciones de años para la fecha de nacimiento.
     * @return ArrayList opciones validas para poner 
     */
    private ArrayList generaOpcionesAnios(){
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        ArrayList anios = new ArrayList();
        for (int i = (year - 40) ; i < (year - 14); i++) {
            anios.add(i);
        }
        return anios;
    }
    
    private void generaFechaInscripcion(){
        Calendar cal = Calendar.getInstance();
        int anio = cal.get(Calendar.YEAR);
        int mes = cal.get(Calendar.MONTH);
        int dia = cal.get(Calendar.DAY_OF_MONTH);
        String[] meses = {"Enero", "Febrero", "Marzo","Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre","Noviembre", "Diciembre"};
        fechaDeInscripcion.setText(dia+" de "+meses[mes]+" del "+anio);
        fechaDeInscripcionAlumno = anio+"-"+(mes+1)+"-"+dia;
    }
    
    private ArrayList llenaPlanesDeEstudio(){
        ArrayList<String> nombresPlanesEstudio = new ArrayList();
        nombresPlanesEstudio.add("Selecciona un plan de estudio");
        ArrayList<PlanDeEstudio> planesDeEstudio = ListaDePlanesDeEstudio.getListaDePlanesDeEstudio().getPlanesDeEstudio();
        for (int i = 0; i < planesDeEstudio.size(); i++) {
            nombresPlanesEstudio.add(planesDeEstudio.get(i).getNombre());
        }
        return nombresPlanesEstudio;
    }
    
    private boolean validarLlenadoDeCampos(){
        String matricula = this.matriculaAlumno.getText();
        String nombre = this.nombreAlumno.getText();
        String apellidos = this.apellidosAlumno.getText();
        int indiceDia = this.diaNacimiento.getSelectedIndex();
        int indiceMes = this.mesNacimiento.getSelectedIndex();
        int indiceAnio = this.anioNacimiento.getSelectedIndex();
        int indiceSexo = this.sexoAlumno.getSelectedIndex();
        String email = this.emailAlumno.getText();
        String curp = this.curpAlumno.getText();
        String lugar = this.lugarDeNacimiento.getText();
        int indiceTurno = this.turnoCombo.getSelectedIndex();
        int indicePlan = this.planesDeEstudioCombo.getSelectedIndex();
        
        boolean campoMatriculaVacio = "".equals(matricula);
        boolean campoNombreVacio = "".equals(nombre);
        boolean campoApellidosVacio = "".equals(apellidos);
        boolean campoDiaVacio = indiceDia == 0? true : false;
        boolean campoMesVacio = indiceMes == 0? true : false;
        boolean campoAnioVacio = indiceAnio == 0? true : false;
        boolean campoSexoVacio = indiceSexo == 0? true : false;
        boolean campoEmailVacio = "".equals(email);
        boolean campoCurpVacio = "".equals(curp);
        boolean campoLugarVacio = "".equals(lugar);
        boolean campoTurnoVacio = indiceTurno == 0? true : false;
        boolean campoPlanVacio = indicePlan == 0? true : false;
        
        
        if(!campoMatriculaVacio && !campoNombreVacio && !campoApellidosVacio && !campoDiaVacio && !campoMesVacio
                && !campoAnioVacio && !campoSexoVacio && !campoEmailVacio && !campoCurpVacio && !campoLugarVacio
                && !campoTurnoVacio && !campoPlanVacio){
            return true;
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaAgregarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaAgregarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaAgregarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaAgregarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaAgregarAlumno().setVisible(true);
            }
        });
    }
    
   private String fechaDeInscripcionAlumno ="";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anioNacimiento;
    private javax.swing.JTextField apellidosAlumno;
    private javax.swing.JButton botonAltaAlumno;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JTextField curpAlumno;
    private javax.swing.JComboBox diaNacimiento;
    private javax.swing.JTextField emailAlumno;
    private javax.swing.JTextField fechaDeInscripcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lugarDeNacimiento;
    private javax.swing.JTextField matriculaAlumno;
    private javax.swing.JComboBox mesNacimiento;
    private javax.swing.JTextField nombreAlumno;
    private javax.swing.JComboBox planesDeEstudioCombo;
    private javax.swing.JComboBox sexoAlumno;
    private javax.swing.JComboBox turnoCombo;
    // End of variables declaration//GEN-END:variables
}
